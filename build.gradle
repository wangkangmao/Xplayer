// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"

buildscript {

    ext.kotlin_version = "1.5.31"
    ext.anko_version = '0.10.2'

    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
    }
    //编译时报注释GBK编码错误解决
    tasks.withType(Javadoc) {
        //方法上忽略@return和@param注解未添加说明注释
        options.addStringOption('Xdoclint:none', '-quiet')
        //解决GBK编码错误提示
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }
    //跳过构建时link检查
    tasks.whenTaskAdded { task ->
        if (task.name.equals("lint")) {
            task.enabled = false
        }
    }
}
//当androidx.core 版本冲突时，强制gradle使用指定版本
subprojects {
    project.configurations.all {
        resolutionStrategy.eachDependency {
            details -> if (details.requested.group == 'androidx.core' && !details.requested.name.contains('androidx'))
            { details.useVersion "1.6.0" }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}